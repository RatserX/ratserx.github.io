{"version":3,"sources":["app/files/profile sync /^/.*$","serviceWorker.ts","app/layout/Layout.tsx","app/layout/Default/Default.tsx","app/helpers/Function.helper.tsx","app/store/expand/Expand.action.tsx","app/store/expand/Expand.type.tsx","app/components/Material/HomePackAddon/HomePackAddon.component.tsx","app/components/Material/HomePackInstruction/HomePackInstruction.component.tsx","app/components/Material/HomePack/HomePack.component.tsx","app/components/Material/HomeServer/HomeServer.component.tsx","app/components/Material/Home/Home.component.tsx","app/layout/Material/Material.tsx","app/layout/MaterialDark/MaterialDark.tsx","app/layout/MaterialLight/MaterialLight.tsx","environment/environment.tsx","app/App.tsx","app/store/profile/Profile.action.tsx","app/store/profile/Profile.type.tsx","app/store/expand/Expand.reducer.tsx","app/store/profile/Profile.reducer.tsx","app/store/Store.tsx","index.tsx"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","Boolean","window","location","hostname","match","ThemeType","children","exact","path","isObjectNullOrEmpty","isObjectNull","getOwnPropertyNames","length","isObjectEmpty","isStringNullOrEmpty","s","isStringNull","isStringEmpty","timestampDateToDate","date","locales","options","dateTimeFormat","Intl","DateTimeFormat","format","setInstance","instanceKey","instanceValue","type","setInstanceIsEnabled","instanceValueIsEnabled","mapDispatchToProps","appConnector","connect","state","expandState","expand","useStyles","makeStyles","theme","createStyles","collapse","transform","transition","transitions","create","duration","shortest","HomePackAddon","props","addon","classes","value","Date","timestampValueToDate","timestamp","isEnabled","instance","useEffect","Grid","className","item","xs","sm","md","xl","zeroMinWidth","Box","Card","variant","square","CardHeader","avatar","Avatar","src","image","subheader","Typography","noWrap","version","subheaderTypographyProps","title","name","titleTypographyProps","CardActions","disableSpacing","IconButton","hidden","url","href","target","Info","download","GetApp","description","onClick","style","marginLeft","ExpandMore","Collapse","in","timeout","unmountOnExit","CardContent","component","color","smallAvatar","width","spacing","height","instruction","ListItem","ListItemAvatar","Label","ListItemText","HomePack","pack","mt","elevation","action","Divider","container","addons","index","array","key","instructions","HomeServer","server","List","dense","disablePadding","disableGutters","ListItemIcon","SettingsInputAntenna","address","SettingsEthernet","port","homeConnector","profileState","profile","Home","AppBar","position","Toolbar","configuration","game","marginRight","minWidth","textAlign","packs","servers","rel","content","Container","createMuiTheme","palette","ThemeProvider","CssBaseline","Material","Layout","themeType","MaterialDark","require","MaterialLight","Default","environment","production","setConfiguration","filepath","App","initialState","ExpandReducer","ProfileReducer","CombinedReducer","combineReducers","store","createStore","applyMiddleware","Thunk","ReactDOM","render","document","querySelector","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.bc44df76.chunk.js","sourcesContent":["var map = {\n\t\"./configuration\": 46,\n\t\"./configuration.json\": 46\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 87;","/* eslint @typescript-eslint/no-use-before-define: 0 */\n/* eslint @typescript-eslint/prefer-regexp-exec: 0 */\n\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4]\\d|[01]?\\d{1,2})){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && !contentType.includes(\"javascript\"))\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\r\nimport Default from \"./Default/Default\";\r\nimport MaterialDark from \"./MaterialDark/MaterialDark\";\r\nimport MaterialLight from \"./MaterialLight/MaterialLight\";\r\n\r\nenum ThemeType {\r\n  Default,\r\n  MaterialDark,\r\n  MaterialLight\r\n}\r\n\r\ntype LayoutProps = {\r\n  children?: JSX.Element;\r\n  themeType?: ThemeType;\r\n};\r\n\r\nconst Layout = ({ themeType, children }: LayoutProps) => {\r\n  switch (themeType) {\r\n    case ThemeType.MaterialDark:\r\n      require(\"./MaterialDark/_styles.scss\");\r\n\r\n      return (\r\n        <MaterialDark.Element>\r\n          <MaterialDark.Router>{children}</MaterialDark.Router>\r\n        </MaterialDark.Element>\r\n      );\r\n    case ThemeType.MaterialLight:\r\n      require(\"./MaterialLight/_styles.scss\");\r\n\r\n      return (\r\n        <MaterialLight.Element>\r\n          <MaterialLight.Router>{children}</MaterialLight.Router>\r\n        </MaterialLight.Element>\r\n      );\r\n    default:\r\n      require(\"./Default/_styles.scss\");\r\n\r\n      return (\r\n        <Default.Element>\r\n          <Default.Router>{children}</Default.Router>\r\n        </Default.Element>\r\n      );\r\n  }\r\n};\r\n\r\n/* Layout.defaultProps = {\r\n  layoutType: LayoutType.Default,\r\n  children: \"\"\r\n};\r\n\r\nLayout.propTypes = {\r\n  layoutType: PropTypes.oneOf($enum(LayoutType).getValues()),\r\n  children: PropTypes.node\r\n}; */\r\n\r\nexport { ThemeType };\r\nexport default Layout;\r\n","import React from \"react\";\r\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\r\n\r\ntype ElementProps = {\r\n  children?: JSX.Element;\r\n};\r\n\r\ntype RouterProps = {\r\n  children?: JSX.Element;\r\n};\r\n\r\nconst Element = ({ children }: ElementProps) => {\r\n  return (\r\n    <div>\r\n      <div>{children}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Router = ({ children }: RouterProps) => {\r\n  return (\r\n    <div>\r\n      <BrowserRouter>\r\n        <Switch>\r\n          <Route exact path=\"/\" />\r\n        </Switch>\r\n      </BrowserRouter>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\nexport default { Element, Router };\r\n","const isObjectEmpty = (o: any): boolean =>\r\n  Object.getOwnPropertyNames(o).length === 0;\r\n\r\nconst isObjectNull = (o: any): boolean => o == null;\r\n\r\nconst isObjectNullOrEmpty = (o: any) => isObjectNull(o) || isObjectEmpty(o);\r\n\r\nconst isStringEmpty = (s: string): boolean => s.length === 0;\r\n\r\nconst isStringNull = (s: string | undefined): boolean => s == null;\r\n\r\nconst isStringNullOrEmpty = (s: string | undefined) =>\r\n  isStringNull(s) || isStringEmpty(s as string);\r\n\r\nconst timestampDateToDate = (\r\n  date: Date,\r\n  locales = \"en-US\",\r\n  options: Intl.DateTimeFormatOptions = {}\r\n) => {\r\n  const dateTimeFormat = Intl.DateTimeFormat(locales, options);\r\n\r\n  return dateTimeFormat.format(date);\r\n};\r\n\r\nconst timestampValueToDate = (\r\n  value: number,\r\n  locales = \"en-US\",\r\n  options: Intl.DateTimeFormatOptions = {}\r\n) => {\r\n  const date = new Date(value * 1000);\r\n\r\n  return timestampDateToDate(date, locales, options);\r\n};\r\n\r\nexport {\r\n  isObjectEmpty,\r\n  isObjectNull,\r\n  isObjectNullOrEmpty,\r\n  isStringEmpty,\r\n  isStringNull,\r\n  isStringNullOrEmpty,\r\n  timestampDateToDate,\r\n  timestampValueToDate\r\n};\r\n","import {\r\n  ExpandAction,\r\n  SET_INSTANCE,\r\n  SET_INSTANCE_IS_ENABLED\r\n} from \"./Expand.type\";\r\nimport { InstanceValue } from \"../../helpers/Interface.helper\";\r\n\r\nconst setInstance = (\r\n  instanceKey: string,\r\n  instanceValue: InstanceValue\r\n): ExpandAction => {\r\n  return {\r\n    type: SET_INSTANCE,\r\n    instanceKey,\r\n    instanceValue\r\n  };\r\n};\r\n\r\nconst setInstanceIsEnabled = (\r\n  instanceKey: string,\r\n  instanceValueIsEnabled: boolean\r\n): ExpandAction => {\r\n  return {\r\n    type: SET_INSTANCE_IS_ENABLED,\r\n    instanceKey,\r\n    instanceValueIsEnabled\r\n  };\r\n};\r\n\r\nexport { setInstance, setInstanceIsEnabled };\r\n","import { Instance, InstanceValue } from \"../../helpers/Interface.helper\";\r\n\r\nexport const SET_INSTANCE = \"EXPAND_1\";\r\nexport const SET_INSTANCE_IS_ENABLED = \"EXPAND_2\";\r\n\r\ninterface SetInstanceAction {\r\n  type: typeof SET_INSTANCE;\r\n  instanceKey: string;\r\n  instanceValue: InstanceValue;\r\n}\r\n\r\ninterface SetInstanceIsEnabledAction {\r\n  type: typeof SET_INSTANCE_IS_ENABLED;\r\n  instanceKey: string;\r\n  instanceValueIsEnabled: boolean;\r\n}\r\n\r\nexport type ExpandAction = SetInstanceAction | SetInstanceIsEnabledAction;\r\n\r\nexport interface ExpandState {\r\n  instance: Instance;\r\n}\r\n\r\n// https://medium.com/@pie6k/better-way-to-create-type-safe-redux-actions-and-reducers-with-typescript-45386808c103\r\n","import React, { useEffect } from \"react\";\r\nimport {\r\n  Grid,\r\n  Card,\r\n  Typography,\r\n  CardContent,\r\n  CardHeader,\r\n  IconButton,\r\n  CardActions,\r\n  Collapse,\r\n  Avatar,\r\n  makeStyles,\r\n  Theme,\r\n  createStyles,\r\n  Box\r\n} from \"@material-ui/core\";\r\nimport { GetApp, ExpandMore, Info } from \"@material-ui/icons\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport \"./HomePackAddon.style.scss\";\r\nimport {\r\n  timestampValueToDate,\r\n  isObjectNullOrEmpty,\r\n  isStringNullOrEmpty\r\n} from \"../../../helpers/Function.helper\";\r\nimport { ConfigurationPackAddon } from \"../../../helpers/Interface.helper\";\r\nimport { State } from \"../../../store/Store\";\r\nimport {\r\n  setInstance,\r\n  setInstanceIsEnabled\r\n} from \"../../../store/expand/Expand.action\";\r\n\r\nconst mapStateToProperties = (state: State) => ({\r\n  expandState: state.expand\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  setInstance,\r\n  setInstanceIsEnabled\r\n};\r\n\r\nconst appConnector = connect(mapStateToProperties, mapDispatchToProps);\r\n\r\ntype ConnectorProps = ConnectedProps<typeof appConnector>;\r\n\r\ntype Props = ConnectorProps & {\r\n  addon: ConfigurationPackAddon;\r\n  id: string;\r\n};\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    collapse: {\r\n      transform: \"rotate(0deg)\",\r\n      transition: theme.transitions.create(\"transform\", {\r\n        duration: theme.transitions.duration.shortest\r\n      })\r\n    },\r\n    expand: {\r\n      transform: \"rotate(180deg)\"\r\n    }\r\n  })\r\n);\r\n\r\nconst HomePackAddonComponent = (props: Props) => {\r\n  const { expandState, setInstanceIsEnabled, addon, id } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  timestampValueToDate(addon.timestamp);\r\n\r\n  const instanceKey = `HOMEPACKADDON${id}`;\r\n  const isEnabled = expandState.instance[instanceKey]?.isEnabled;\r\n\r\n  useEffect(() => {\r\n    if (isObjectNullOrEmpty(expandState.instance)) {\r\n      setInstance(instanceKey, {\r\n        isEnabled: false\r\n      });\r\n    }\r\n  }, [expandState, instanceKey]);\r\n\r\n  const handleDescriptionExpandClick = () => {\r\n    setInstanceIsEnabled(instanceKey, !isEnabled);\r\n  };\r\n\r\n  return (\r\n    <Grid\r\n      className=\"home-pack-addon\"\r\n      item\r\n      xs={12}\r\n      sm={6}\r\n      md={4}\r\n      xl={3}\r\n      zeroMinWidth\r\n    >\r\n      <Box>\r\n        <Card variant=\"outlined\" square>\r\n          <CardHeader\r\n            avatar={\r\n              <Avatar\r\n                src={addon.image || \"/images/ph-addon.png\"}\r\n                variant=\"rounded\"\r\n              />\r\n            }\r\n            subheader={\r\n              <Typography noWrap variant=\"subtitle2\">\r\n                {addon.version}\r\n              </Typography>\r\n            }\r\n            subheaderTypographyProps={{\r\n              variant: \"subtitle2\"\r\n            }}\r\n            title={\r\n              <Typography noWrap variant=\"subtitle1\">\r\n                {addon.name}\r\n              </Typography>\r\n            }\r\n            titleTypographyProps={{\r\n              variant: \"subtitle1\"\r\n            }}\r\n          />\r\n          <CardActions disableSpacing>\r\n            <IconButton\r\n              hidden={isStringNullOrEmpty(addon.url)}\r\n              href={addon.url || \"#\"}\r\n              target=\"_blank\"\r\n            >\r\n              <Info />\r\n            </IconButton>\r\n            <IconButton\r\n              hidden={isStringNullOrEmpty(addon.download)}\r\n              href={addon.download || \"#\"}\r\n              target=\"_blank\"\r\n            >\r\n              <GetApp />\r\n            </IconButton>\r\n            <IconButton\r\n              className={isEnabled ? classes.expand : classes.collapse}\r\n              hidden={isStringNullOrEmpty(addon.description)}\r\n              onClick={handleDescriptionExpandClick}\r\n              style={{\r\n                marginLeft: \"auto\"\r\n              }}\r\n            >\r\n              <ExpandMore />\r\n            </IconButton>\r\n          </CardActions>\r\n          <Collapse in={isEnabled} timeout=\"auto\" unmountOnExit>\r\n            <CardContent>\r\n              <Typography component=\"p\" color=\"textSecondary\" variant=\"body2\">\r\n                {addon.description}\r\n              </Typography>\r\n            </CardContent>\r\n          </Collapse>\r\n        </Card>\r\n      </Box>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nconst HomePackAddon = appConnector(HomePackAddonComponent);\r\n\r\nexport default HomePackAddon;\r\n","import React from \"react\";\r\nimport {\r\n  makeStyles,\r\n  ListItem,\r\n  ListItemText,\r\n  ListItemAvatar,\r\n  Typography\r\n} from \"@material-ui/core\";\r\nimport { Label } from \"@material-ui/icons\";\r\n\r\ntype Props = {\r\n  instruction: string;\r\n  id: string;\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  smallAvatar: {\r\n    width: theme.spacing(3),\r\n    height: theme.spacing(3)\r\n  }\r\n}));\r\n\r\nconst HomePackAddon = (props: Props) => {\r\n  const { instruction, id } = props;\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <ListItem>\r\n      <ListItemAvatar>\r\n        <Label />\r\n      </ListItemAvatar>\r\n      <ListItemText>\r\n        <Typography component=\"p\" variant=\"body2\">\r\n          {instruction}\r\n        </Typography>\r\n      </ListItemText>\r\n    </ListItem>\r\n  );\r\n};\r\n\r\nexport default HomePackAddon;\r\n","import React from \"react\";\r\nimport {\r\n  Grid,\r\n  Typography,\r\n  Divider,\r\n  Card,\r\n  CardContent,\r\n  CardHeader,\r\n  IconButton,\r\n  Box,\r\n  Avatar,\r\n  List\r\n} from \"@material-ui/core\";\r\nimport { Info, GetApp } from \"@material-ui/icons\";\r\nimport \"./HomePack.style.scss\";\r\nimport {\r\n  ConfigurationPack,\r\n  ConfigurationPackAddon\r\n} from \"../../../helpers/Interface.helper\";\r\nimport HomePackAddon from \"../HomePackAddon/HomePackAddon.component\";\r\nimport HomePackInstruction from \"../HomePackInstruction/HomePackInstruction.component\";\r\nimport { isStringNullOrEmpty } from \"../../../helpers/Function.helper\";\r\n\r\ntype Props = {\r\n  key: string;\r\n  pack: ConfigurationPack;\r\n};\r\n\r\nconst HomePack = (props: Props) => {\r\n  const { pack } = props;\r\n\r\n  return (\r\n    <Grid className=\"home-pack\" item zeroMinWidth>\r\n      <Box mt={2}>\r\n        <Card elevation={3} variant=\"elevation\" square>\r\n          <CardHeader\r\n            action={\r\n              <div>\r\n                <IconButton\r\n                  hidden={isStringNullOrEmpty(pack.url)}\r\n                  href={pack.url || \"#\"}\r\n                  target=\"_blank\"\r\n                >\r\n                  <Info />\r\n                </IconButton>\r\n                <IconButton\r\n                  hidden={isStringNullOrEmpty(pack.download)}\r\n                  href={pack.download || \"#\"}\r\n                  target=\"_blank\"\r\n                >\r\n                  <GetApp />\r\n                </IconButton>\r\n              </div>\r\n            }\r\n            avatar={\r\n              <Avatar\r\n                src={pack.image || \"/images/ph-pack.png\"}\r\n                variant=\"rounded\"\r\n              />\r\n            }\r\n            subheader={<Typography noWrap>{pack.version}</Typography>}\r\n            subheaderTypographyProps={{\r\n              variant: \"subtitle2\"\r\n            }}\r\n            title={<Typography noWrap>{pack.name}</Typography>}\r\n            titleTypographyProps={{\r\n              variant: \"subtitle1\"\r\n            }}\r\n          />\r\n          <CardContent>\r\n            <Typography component=\"p\" color=\"textSecondary\" variant=\"body2\">\r\n              {pack.description}\r\n            </Typography>\r\n            <Box mt={2}>\r\n              <Typography variant=\"h6\">Addons</Typography>\r\n              <Divider />\r\n            </Box>\r\n            <Box mt={2}>\r\n              <Grid container spacing={2}>\r\n                {pack.addons?.map(\r\n                  (\r\n                    value: ConfigurationPackAddon,\r\n                    index: number,\r\n                    array: ConfigurationPackAddon[]\r\n                  ) => {\r\n                    return (\r\n                      <HomePackAddon\r\n                        addon={value}\r\n                        key={index}\r\n                        id={`${index}`}\r\n                      />\r\n                    );\r\n                  }\r\n                )}\r\n              </Grid>\r\n            </Box>\r\n            <Box mt={2}>\r\n              <Typography variant=\"h6\">Instructions</Typography>\r\n              <Divider />\r\n            </Box>\r\n            <Box mt={2}>\r\n              <Grid container spacing={2}>\r\n                {pack.instructions?.map(\r\n                  (value: string, index: number, array: string[]) => {\r\n                    return (\r\n                      <HomePackInstruction\r\n                        instruction={value}\r\n                        key={index}\r\n                        id={`${index}`}\r\n                      />\r\n                    );\r\n                  }\r\n                )}\r\n              </Grid>\r\n            </Box>\r\n          </CardContent>\r\n        </Card>\r\n      </Box>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default HomePack;\r\n","import React from \"react\";\r\nimport {\r\n  Grid,\r\n  Typography,\r\n  Card,\r\n  CardHeader,\r\n  Box,\r\n  Avatar,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  CardContent\r\n} from \"@material-ui/core\";\r\nimport { SettingsEthernet, SettingsInputAntenna } from \"@material-ui/icons\";\r\nimport \"./HomeServer.style.scss\";\r\nimport { ConfigurationServer } from \"../../../helpers/Interface.helper\";\r\n\r\ntype Props = {\r\n  key: string;\r\n  server: ConfigurationServer;\r\n};\r\n\r\nconst HomeServer = (props: Props) => {\r\n  const { server } = props;\r\n\r\n  return (\r\n    <Grid className=\"home-server\" item xs={12} sm={6}>\r\n      <Box mt={2}>\r\n        <Card elevation={3} variant=\"elevation\" square>\r\n          <CardHeader\r\n            avatar={\r\n              <Avatar\r\n                src={server.image || \"/images/ph-server.png\"}\r\n                variant=\"rounded\"\r\n              />\r\n            }\r\n            subheader={server.description}\r\n            subheaderTypographyProps={{\r\n              variant: \"subtitle2\"\r\n            }}\r\n            title={server.name}\r\n            titleTypographyProps={{\r\n              variant: \"subtitle1\"\r\n            }}\r\n          />\r\n          <CardContent>\r\n            <List dense disablePadding>\r\n              <ListItem disableGutters>\r\n                <ListItemIcon>\r\n                  <SettingsInputAntenna />\r\n                </ListItemIcon>\r\n                <ListItemText>\r\n                  <Typography component=\"p\" color=\"textPrimary\" variant=\"body1\">\r\n                    Address\r\n                  </Typography>\r\n                  <Typography\r\n                    component=\"p\"\r\n                    color=\"textSecondary\"\r\n                    variant=\"body2\"\r\n                  >\r\n                    {server.address}\r\n                  </Typography>\r\n                </ListItemText>\r\n              </ListItem>\r\n              <ListItem disableGutters>\r\n                <ListItemIcon>\r\n                  <SettingsEthernet />\r\n                </ListItemIcon>\r\n                <ListItemText>\r\n                  <Typography component=\"p\" color=\"textPrimary\" variant=\"body1\">\r\n                    Port\r\n                  </Typography>\r\n                  <Typography\r\n                    component=\"p\"\r\n                    color=\"textSecondary\"\r\n                    variant=\"body2\"\r\n                  >\r\n                    {server.port}\r\n                  </Typography>\r\n                </ListItemText>\r\n              </ListItem>\r\n            </List>\r\n          </CardContent>\r\n        </Card>\r\n      </Box>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default HomeServer;\r\n","import {\r\n  AppBar,\r\n  Toolbar,\r\n  Typography,\r\n  Box,\r\n  Grid,\r\n  IconButton,\r\n  Avatar,\r\n  Collapse,\r\n  makeStyles,\r\n  createStyles,\r\n  Theme,\r\n  Divider\r\n} from \"@material-ui/core\";\r\nimport { Info, ExpandMore, GetApp } from \"@material-ui/icons\";\r\nimport React, { useEffect } from \"react\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport \"./Home.style.scss\";\r\nimport {\r\n  isObjectNullOrEmpty,\r\n  isStringNullOrEmpty\r\n} from \"../../../helpers/Function.helper\";\r\nimport {\r\n  ConfigurationPack,\r\n  ConfigurationServer\r\n} from \"../../../helpers/Interface.helper\";\r\nimport { State } from \"../../../store/Store\";\r\nimport {\r\n  setInstance,\r\n  setInstanceIsEnabled\r\n} from \"../../../store/expand/Expand.action\";\r\nimport HomePack from \"../HomePack/HomePack.component\";\r\nimport HomeServer from \"../HomeServer/HomeServer.component\";\r\n\r\nconst mapStateToProperties = (state: State) => ({\r\n  expandState: state.expand,\r\n  profileState: state.profile\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  setInstance,\r\n  setInstanceIsEnabled\r\n};\r\n\r\nconst homeConnector = connect(mapStateToProperties, mapDispatchToProps);\r\n\r\ntype ConnectorProps = ConnectedProps<typeof homeConnector>;\r\n\r\ntype Props = ConnectorProps & {};\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    collapse: {\r\n      transform: \"rotate(0deg)\",\r\n      transition: theme.transitions.create(\"transform\", {\r\n        duration: theme.transitions.duration.shortest\r\n      })\r\n    },\r\n    expand: {\r\n      transform: \"rotate(180deg)\"\r\n    }\r\n  })\r\n);\r\n\r\nconst HomeComponent = (props: Props) => {\r\n  const {\r\n    expandState,\r\n    profileState,\r\n    setInstance,\r\n    setInstanceIsEnabled\r\n  } = props;\r\n\r\n  const classes = useStyles();\r\n\r\n  const instanceKey = \"HOME\";\r\n  const isEnabled = expandState.instance[instanceKey]?.isEnabled;\r\n\r\n  useEffect(() => {\r\n    if (isObjectNullOrEmpty(expandState.instance)) {\r\n      setInstance(instanceKey, {\r\n        isEnabled: false\r\n      });\r\n    }\r\n  }, [expandState, instanceKey, setInstance]);\r\n\r\n  const handleDescriptionExpandClick = () => {\r\n    setInstanceIsEnabled(instanceKey, !isEnabled);\r\n  };\r\n\r\n  return (\r\n    <Box className=\"home\">\r\n      <AppBar color=\"default\" position=\"fixed\">\r\n        <Toolbar>\r\n          <Avatar\r\n            src={\r\n              profileState.configuration.game?.image || \"/images/ph-game.png\"\r\n            }\r\n            style={{\r\n              marginRight: \"16px\"\r\n            }}\r\n            variant=\"rounded\"\r\n          />\r\n          <Grid item zeroMinWidth>\r\n            <Typography noWrap variant=\"subtitle1\">\r\n              {profileState.configuration.game?.name}\r\n            </Typography>\r\n            <Typography noWrap variant=\"subtitle2\">\r\n              {profileState.configuration.game?.version}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            style={{\r\n              marginLeft: \"auto\",\r\n              minWidth: \"150px\",\r\n              textAlign: \"right\"\r\n            }}\r\n          >\r\n            <IconButton\r\n              hidden={isStringNullOrEmpty(profileState.configuration.game?.url)}\r\n              href={profileState.configuration.game?.url || \"#\"}\r\n              target=\"_blank\"\r\n            >\r\n              <Info />\r\n            </IconButton>\r\n            <IconButton\r\n              hidden={isStringNullOrEmpty(\r\n                profileState.configuration.game?.download\r\n              )}\r\n              href={profileState.configuration.game?.download || \"#\"}\r\n              target=\"_blank\"\r\n            >\r\n              <GetApp />\r\n            </IconButton>\r\n            <IconButton\r\n              hidden={isStringNullOrEmpty(\r\n                profileState.configuration.game?.description\r\n              )}\r\n              className={isEnabled ? classes.expand : classes.collapse}\r\n              onClick={handleDescriptionExpandClick}\r\n            >\r\n              <ExpandMore />\r\n            </IconButton>\r\n          </Grid>\r\n        </Toolbar>\r\n        <Collapse in={isEnabled} timeout=\"auto\" unmountOnExit>\r\n          <Toolbar>\r\n            <Typography component=\"p\" color=\"textSecondary\" variant=\"body2\">\r\n              {profileState.configuration.game?.description}\r\n            </Typography>\r\n          </Toolbar>\r\n        </Collapse>\r\n      </AppBar>\r\n      <Toolbar />\r\n      <Box mt={2}>\r\n        <Typography variant=\"h6\">Packs</Typography>\r\n        <Divider />\r\n      </Box>\r\n      <Grid container>\r\n        {profileState.configuration.packs?.map(\r\n          (\r\n            value: ConfigurationPack,\r\n            index: number,\r\n            array: ConfigurationPack[]\r\n          ) => {\r\n            return <HomePack key={`${index}`} pack={value} />;\r\n          }\r\n        )}\r\n      </Grid>\r\n      <Box mt={2}>\r\n        <Typography variant=\"h6\">Servers</Typography>\r\n        <Divider />\r\n      </Box>\r\n      <Grid container spacing={2}>\r\n        {profileState.configuration.servers?.map(\r\n          (\r\n            value: ConfigurationServer,\r\n            index: number,\r\n            array: ConfigurationServer[]\r\n          ) => {\r\n            return <HomeServer key={`${index}`} server={value} />;\r\n          }\r\n        )}\r\n      </Grid>\r\n      <Box mt={2} />\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst Home = homeConnector(HomeComponent);\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { Container } from \"@material-ui/core\";\r\nimport Helmet from \"react-helmet\";\r\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\r\nimport Home from \"../../components/Material/Home/Home.component\";\r\n\r\ntype ElementProps = {\r\n  children?: JSX.Element;\r\n};\r\n\r\ntype RouterProps = {\r\n  children?: JSX.Element;\r\n};\r\n\r\nconst Element = ({ children }: ElementProps) => {\r\n  return (\r\n    <div>\r\n      <Helmet>\r\n        <link\r\n          href=\"https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap\"\r\n          rel=\"stylesheet\"\r\n        />\r\n        <meta\r\n          name=\"viewport\"\r\n          content=\"minimum-scale=1, initial-scale=1, width=device-width\"\r\n        />\r\n      </Helmet>\r\n      <Container>{children}</Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Router = ({ children }: RouterProps) => {\r\n  return (\r\n    <div>\r\n      <BrowserRouter>\r\n        <Switch>\r\n          <Route exact path=\"/\">\r\n            <Home />\r\n          </Route>\r\n        </Switch>\r\n      </BrowserRouter>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default { Element, Router };\r\n","import React from \"react\";\r\nimport { ThemeProvider, createMuiTheme, CssBaseline } from \"@material-ui/core\";\r\nimport Material from \"../Material/Material\";\r\n\r\ntype ElementProps = {\r\n  children?: JSX.Element;\r\n};\r\n\r\ntype RouterProps = {\r\n  children?: JSX.Element;\r\n};\r\n\r\nconst Element = ({ children }: ElementProps) => {\r\n  const theme = createMuiTheme({\r\n    palette: {\r\n      type: \"dark\"\r\n    }\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <ThemeProvider theme={theme}>\r\n        <CssBaseline>\r\n          <Material.Element>{children}</Material.Element>\r\n        </CssBaseline>\r\n      </ThemeProvider>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Router = ({ children }: RouterProps) => {\r\n  return (\r\n    <div>\r\n      <Material.Router>{children}</Material.Router>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default { Element, Router };\r\n","import React from \"react\";\r\nimport { ThemeProvider, createMuiTheme, CssBaseline } from \"@material-ui/core\";\r\nimport Material from \"../Material/Material\";\r\n\r\ntype ElementProps = {\r\n  children?: JSX.Element;\r\n};\r\n\r\ntype RouterProps = {\r\n  children?: JSX.Element;\r\n};\r\n\r\nconst Element = ({ children }: ElementProps) => {\r\n  const theme = createMuiTheme({\r\n    palette: {\r\n      type: \"light\"\r\n    }\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <ThemeProvider theme={theme}>\r\n        <CssBaseline>\r\n          <Material.Element>{children}</Material.Element>\r\n        </CssBaseline>\r\n      </ThemeProvider>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Router = ({ children }: RouterProps) => {\r\n  return <Material.Router>{children}</Material.Router>;\r\n};\r\n\r\nexport default { Element, Router };\r\n","import { ThemeType } from \"../app/layout/Layout\";\r\n\r\nconst environment = {\r\n  production: true,\r\n  profile: \"profile.json\",\r\n  theme: ThemeType.MaterialDark\r\n};\r\n\r\nexport default environment;\r\n","import React, { useEffect } from \"react\";\r\nimport { connect, ConnectedProps } from \"react-redux\";\r\nimport environment from \"../environment/environment\";\r\nimport { State } from \"./store/Store\";\r\nimport { setConfiguration } from \"./store/profile/Profile.action\";\r\nimport { isObjectNullOrEmpty } from \"./helpers/Function.helper\";\r\nimport Layout from \"./layout/Layout\";\r\n\r\nconst mapStateToProperties = (state: State) => ({\r\n  profileState: state.profile\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  setConfiguration\r\n};\r\n\r\nconst appConnector = connect(mapStateToProperties, mapDispatchToProps);\r\n\r\ntype ConnectorProps = ConnectedProps<typeof appConnector>;\r\n\r\ntype Props = ConnectorProps & {};\r\n\r\nconst AppComponent = (props: Props) => {\r\n  const { profileState, setConfiguration } = props;\r\n\r\n  useEffect(() => {\r\n    if (isObjectNullOrEmpty(profileState.configuration)) {\r\n      setConfiguration(\"configuration.json\");\r\n    }\r\n  }, [profileState, setConfiguration]);\r\n\r\n  return <Layout themeType={environment.theme} />;\r\n};\r\n\r\nconst App = appConnector(AppComponent);\r\n\r\nexport default App;\r\n","import { ProfileAction, SET_CONFIGURATION, SET_FILEPATH } from \"./Profile.type\";\r\nimport { Configuration } from \"../../helpers/Interface.helper\";\r\n\r\nconst setConfiguration = (filepath = \"configuration.json\"): ProfileAction => {\r\n  const configuration: Configuration = require(`../../files/profile/${filepath}`);\r\n\r\n  return {\r\n    type: SET_CONFIGURATION,\r\n    configuration\r\n  };\r\n};\r\n\r\nconst setFilepath = (filepath: string): ProfileAction => {\r\n  return {\r\n    type: SET_FILEPATH,\r\n    filepath\r\n  };\r\n};\r\n\r\nexport { setConfiguration, setFilepath };\r\n","import { Configuration } from \"../../helpers/Interface.helper\";\r\n\r\nexport const SET_CONFIGURATION = \"PROFILE_1\";\r\nexport const SET_FILEPATH = \"PROFILE_2\";\r\n\r\ninterface SetFilepathAction {\r\n  type: typeof SET_FILEPATH;\r\n  filepath: string;\r\n}\r\n\r\ninterface SetConfigurationAction {\r\n  type: typeof SET_CONFIGURATION;\r\n  configuration: Configuration;\r\n}\r\n\r\nexport type ProfileAction = SetFilepathAction | SetConfigurationAction;\r\n\r\nexport interface ProfileState {\r\n  filepath: string;\r\n  configuration: Configuration;\r\n}\r\n","import {\r\n  ExpandState,\r\n  ExpandAction,\r\n  SET_INSTANCE,\r\n  SET_INSTANCE_IS_ENABLED\r\n} from \"./Expand.type\";\r\n\r\nconst initialState: ExpandState = {\r\n  instance: {}\r\n};\r\n\r\nconst ExpandReducer = (\r\n  state: ExpandState = initialState,\r\n  action: ExpandAction\r\n): ExpandState => {\r\n  switch (action.type) {\r\n    case SET_INSTANCE:\r\n      return {\r\n        ...state,\r\n        instance: {\r\n          [action.instanceKey]: action.instanceValue\r\n        }\r\n      };\r\n    case SET_INSTANCE_IS_ENABLED:\r\n      return {\r\n        ...state,\r\n        instance: {\r\n          [action.instanceKey]: {\r\n            isEnabled: action.instanceValueIsEnabled\r\n          }\r\n        }\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default ExpandReducer;\r\n","import {\r\n  ProfileState,\r\n  ProfileAction,\r\n  SET_CONFIGURATION,\r\n  SET_FILEPATH\r\n} from \"./Profile.type\";\r\n\r\nconst initialState: ProfileState = {\r\n  configuration: {},\r\n  filepath: \"configuration.json\"\r\n};\r\n\r\nconst ProfileReducer = (\r\n  state: ProfileState = initialState,\r\n  action: ProfileAction\r\n): ProfileState => {\r\n  switch (action.type) {\r\n    case SET_CONFIGURATION:\r\n      return {\r\n        ...state,\r\n        configuration: action.configuration\r\n      };\r\n    case SET_FILEPATH:\r\n      return {\r\n        ...state,\r\n        filepath: action.filepath\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default ProfileReducer;\r\n","import { applyMiddleware, combineReducers, createStore } from \"redux\";\r\nimport Thunk from \"redux-thunk\";\r\nimport ExpandReducer from \"./expand/Expand.reducer\";\r\nimport ProfileReducer from \"./profile/Profile.reducer\";\r\n\r\nconst CombinedReducer = combineReducers({\r\n  expand: ExpandReducer,\r\n  profile: ProfileReducer\r\n});\r\n\r\nexport type State = ReturnType<typeof CombinedReducer>;\r\n\r\nexport const configureStore = () => {\r\n  const store = createStore(CombinedReducer, applyMiddleware(Thunk));\r\n\r\n  return store;\r\n};\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport \"./index.css\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport App from \"./app/App\";\nimport { configureStore } from \"./app/store/Store\";\n\nconst store = configureStore();\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.querySelector(\"#root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}